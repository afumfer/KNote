@page "/"
@page "/index"

@using KNote.Client.Pages.Notes

@implements IDisposable

@inject IStore store
@inject TooltipService tooltipService
@inject DialogService dialogService

@*@attribute [Authorize(Roles = "Public, Staff, ProjecManager, Admin")]*@

<div>
    <h3>@KntConst.AppName home page</h3>
    <p><i>@appInfo</i></p>
    
</div>

<hr />    

<div class="row">
    <div class="col-12">
        <NotesList Notes="notes" OnNoteDelete="OnNoteDelete" OnNoteEdit="OnNoteEdit" OnNoteView="OnNoteView" />
    </div>
</div>


@code {    

    private List<NoteInfoDto>? notes;    
    private string? appInfo;
   

    protected override async Task OnInitializedAsync()
    {        
        store.AppState.OnChange += StateHasChanged;

        appInfo = $"{KntConst.AppDescription} ({store.AppState.AppVersion})";
        await LoadNotes();
    }

    public void Dispose()
    {
        store.AppState.OnChange -= StateHasChanged;
    }

    private async Task LoadNotes()
    {
        notes = null;
        var result = await store.Notes.GetHomeNotesAsync();
        if (result.IsValid)                    
            notes = result.Entity;
    }

    private void OnNoteView(NoteInfoDto note)
    {
        store.NavigateTo($"notes/{note.NoteId}/index");
    }

    private void OnNoteEdit(NoteInfoDto note)
    {
        store.NavigateTo($"notes/edit/{note.NoteId}/index");
    }

    async Task OnNoteDelete(NoteInfoDto item)
    {
        var resultDialog = await dialogService.Confirm(
            $"Are you sure you want delete note - {@item.Topic} - ({@item.NoteNumber})?",
            "Delete note",
            new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

        if (resultDialog == true)
        {
            var result = await store.Notes.DeleteAsync(item.NoteId);
            if (result.IsValid)                            
            {            
                await LoadNotes();
            }
        }
    }

}
