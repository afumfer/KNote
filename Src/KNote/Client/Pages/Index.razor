@page "/"
@page "/index"

@using KNote.Client.Pages.Notes

@inject AppState appState
@inject IWebApiService webApiService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@*@attribute [Authorize(Roles = "Public, Staff, ProjecManager, Admin")]*@

<div>
    <h3>@appState.AppName home page</h3>
    <p><i>@appInfo</i></p>
    <hr />
    <NotesList Notes="notes" OnNoteDelete="GoNoteDelete" OnNoteEdit="GoNoteEdit" OnNoteView="GoNoteView" />
</div>

<ModalDialog @ref="modalDialog" Title="Delete note" onConfirm="OnConfirmDelete" onCancel="OnCancelDelete">
    <div><p>Are you sure you want to delete note "@itemDelete.Topic (@itemDelete.NoteNumber)" ?</p></div>
</ModalDialog>

@code {    

    private List<NoteInfoDto> notes;

    private ModalDialog modalDialog;
    private NoteInfoDto itemDelete;

    private string appInfo;

    protected override async Task OnInitializedAsync()
    {
        appInfo = $"{appState.AppDescription} ({appState.AppVersion})";
        await LoadNotes();
    }

    private async Task LoadNotes()
    {
        notes = null;
        var result = await webApiService.Notes.GetHomeNotesAsync();
        if (!result.IsValid)
            await showMessages.ShowErrorMessage(result.Message);
        else
            notes = result.Entity;
    }

    private void GoNoteView(NoteInfoDto note)
    {
        navigationManager.NavigateTo($"notes/{note.NoteId}/index");
    }

    private void GoNoteEdit(NoteInfoDto note)
    {
        navigationManager.NavigateTo($"notes/edit/{note.NoteId}/index");
    }

    private void GoNoteDelete(NoteInfoDto item)
    {
        modalDialog.Show();
        itemDelete = item;
    }

    private async Task OnConfirmDelete()
    {
        modalDialog.Hide();

        var result = await webApiService.Notes.DeleteAsync(itemDelete.NoteId);
        if (!result.IsValid)
            await showMessages.ShowErrorMessage(result.Message);
        else
            await LoadNotes();

        itemDelete = null;
    }

    private void OnCancelDelete()
    {
        modalDialog.Hide();
        itemDelete = null;
    }

}
