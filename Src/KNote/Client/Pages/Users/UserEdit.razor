@page "/users/edit/{UserId}"

@inject IStore store
@inject DialogService dialogService

@attribute [Authorize(Roles = "Admin")]


<NavigationLock ConfirmExternalNavigation=true />

@if (user != null)
{
    <UserForm Title="User Edit" OnValidSubmit="OnSave" OnExit="OnExit" User="user"></UserForm>
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string UserId { get; set; } = string.Empty;

    private UserDto? user;

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        Guid id;
        var parseOk = Guid.TryParse(UserId, out id);
        if (!parseOk)
        {
            await dialogService.Alert("Invalid user identifier.");
            dialogService.Close(null);
            return;
        }

        var result = await store.Users.GetAsync(id);
        if (!result.IsValid)                    
            dialogService.Close(null);
        else
        {
            user = result.Entity;
            user.SetIsDirty(false);
        }
    }

    private async Task OnSave()
    {
        if (!user!.IsDirty())
        {            
            dialogService.Close(user);
        }
        else
        {
            if (user.IsValid())                            
            {
                var result = await store.Users.SaveAsync(user);
                if (result.IsValid)                                    
                {                    
                    dialogService.Close(result.Entity);
                }
            }
        }
    }

    private async Task OnExit()
    {                
        if (user == null)
        {
            dialogService.Close(null);
            return;
        }
                  
        if (user.IsDirty())
        {
            var resultDialog = await dialogService.Confirm(
                @"Do you want to leave the page and lose your changes?",
                $"{KntConst.AppName}",
                new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

            if (resultDialog == true)
            {
                dialogService.Close(null);
            }
        }
        else
        {
            dialogService.Close(null);
        }
    }

}
