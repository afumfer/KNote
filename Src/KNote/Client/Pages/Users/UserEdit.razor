@page "/users/edit/{UserId}"

@inject IStore webApiService
@inject DialogService dialogService
@inject NotificationService notificationService

@attribute [Authorize(Roles = "Admin")]

@if (user != null)
{
    <UserForm Title="User Edit" OnValidSubmit="OnSave" OnExit="OnExit" User="user"></UserForm>
}
else
{
    <text>Loading ... </text>
}


@code {
    [Parameter] public string UserId { get; set; }

    private UserDto user;

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.Users.GetAsync(Guid.Parse(UserId));
        if (!result.IsValid)
        {            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get user.", Detail =  result.Message, Duration = 12000 });
            dialogService.Close(null);
        }
        else
            user = result.Entity;

        base.OnInitialized();
    }

    private async Task OnSave()
    {
        if (!user.IsDirty())
        {            
            dialogService.Close(user);
        }
        else
        {
            if (!user.IsValid())                            
                notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save user.", Detail =  user.GetErrorMessage(), Duration = 12000 });
            else
            {
                var result = await webApiService.Users.SaveAsync(user);
                if (!result.IsValid)                    
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save user.", Detail =  result.Message, Duration = 12000 });
                else
                {
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Save user.", Detail =  "The data has been saved.", Duration = 3000 });
                    dialogService.Close(result.Entity);
                }
            }
        }
    }

    private void OnExit()
    {        
        dialogService.Close(null);
    }

}
