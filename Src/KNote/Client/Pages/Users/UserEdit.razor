@page "/users/edit/{UserId}"

@inject IWebApiService webApiService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Admin")]

@if (user != null)
{
    <UserForm Title="User Edit" OnValidSubmit="OnSave" OnExit="OnExit" User="user"></UserForm>
}
else
{
    <text>Loading ... </text>
}


@code {
    [Parameter] public string UserId { get; set; }

    private UserDto user;

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.Users.GetAsync(Guid.Parse(UserId));
        if (!result.IsValid)
        {
            await showMessages.ShowErrorMessage(result.Message);
            navigationManager.NavigateTo("/");
        }
        else        
            user = result.Entity;
        
        base.OnInitialized();
    }

    private async Task OnSave()
    {
        var result = await webApiService.Users.SaveAsync(user);
        if (!result.IsValid)        
            await showMessages.ShowErrorMessage(result.Message);        
        else        
            navigationManager.NavigateTo("users");        
    }

    private void OnExit()
    {
        navigationManager.NavigateTo("users");
    }

}
