@page "/types/new"

@inject IStore store
@inject DialogService dialogService

@attribute [Authorize(Roles = "Admin")]


<NavigationLock ConfirmExternalNavigation=true />

<TypeForm Title="New type edit" OnValidSubmit="OnNew" OnExit="OnExit" NoteType="noteType" />

@code {
    NoteTypeDto noteType = new NoteTypeDto();

    private async Task OnNew()
    {
        if (noteType.IsValid())            
        {
            var result = await store.NoteTypes.SaveAsync(noteType);
            if (result.IsValid)
            {                
                dialogService.Close(result.Entity);
            }
        }
    }

    private async Task OnExit()
    {
        if (noteType == null)
        {
            dialogService.Close(null);
            return;
        }

        if (noteType.IsDirty())
        {
            var resultDialog = await dialogService.Confirm(
                @"Do you want to leave the page and lose your changes?",
                $"{KntConst.AppName}",
                new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

            if (resultDialog == true)
            {
                dialogService.Close(null);
            }
        }
        else
        {
            dialogService.Close(null);
        }
    }
}
