@page "/types"

@inject IWebApiService webApiService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages
@inject TooltipService tooltipService

@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid bg-light border">
    <div class="row">
        <div class="col-6">
            <h3 class="pt-3">Note types admin</h3>
        </div>
        <div class="col-6">
            <span class="float-right">
                <RadzenMenu>
                    <RadzenMenuItem Text="New type ..." Icon="post_add"  Click="OnNew"></RadzenMenuItem>
                </RadzenMenu>
            </span>
        </div>
    </div>
</div>

<div class="container-fluid pt-2">
    <div class="row">
        <EntityList List="noteTypes">
            <ItemsFull>
                <RadzenDataGrid Data="@noteTypes" TItem="NoteTypeDto" AllowColumnResize="true" >
                    <Columns>
                        <RadzenDataGridColumn TItem="NoteTypeDto" Property="Name" Title="Name" />
                        <RadzenDataGridColumn TItem="NoteTypeDto" Property="Description" Title="Full name" />                
                        <RadzenDataGridColumn TItem="NoteTypeDto" Title="Actions" Width="100px" TextAlign="TextAlign.Center" >
                            <Template Context="data">                                                        
                                <RadzenButton Click="@(() => OnEdit(data))" Icon="edit" 
                                    ButtonStyle="ButtonStyle.Primary" 
                                    MouseEnter="@(args => tooltipService.Open(args, "Edit note type ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" Class="mr-0 mb-0"  />
                                <RadzenButton Click="@(() => OnDelete(data))" Icon="delete"
                                    ButtonStyle="ButtonStyle.Danger" 
                                    MouseEnter="@(args => tooltipService.Open(args, "Delete note type ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" />

                            </Template>
                        </RadzenDataGridColumn>
                    </Columns> 
                </RadzenDataGrid>
            </ItemsFull>
        </EntityList>
    </div>
</div>

<ModalDialog @ref="modalDialog" Title="Delete type" onConfirm="OnConfirmDelete" onCancel="OnCancelDelete">
    <div><p>Are you sure you want to delete type "@itemDelete.Name" ?</p></div>
</ModalDialog>

@code {

    private List<NoteTypeDto> noteTypes { get; set; }
    private ModalDialog modalDialog;
    private NoteTypeDto itemDelete;

    protected async override Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        var result = await webApiService.NoteTypes.GetAllAsync();
        if (result.IsValid)
            noteTypes = result.Entity;
        else
            await showMessages.ShowErrorMessage(result.Message);
    }

    void OnNew()
    {
        navigationManager.NavigateTo($"types/new");
    }

    void OnEdit(NoteTypeDto noteType)
    {
        navigationManager.NavigateTo($"types/edit({noteType.NoteTypeId}");
    }

    private void OnDelete(NoteTypeDto item)
    {
        modalDialog.Show();
        itemDelete = item;
    }

    private async Task OnConfirmDelete()
    {
        modalDialog.Hide();

        var result = await webApiService.NoteTypes.DeleteAsync(itemDelete.NoteTypeId);
        if (!result.IsValid)
            await showMessages.ShowErrorMessage(result.Message);
        else
            await Load();

        itemDelete = null;
    }

    private void OnCancelDelete()
    {
        modalDialog.Hide();
        itemDelete = null;
    }

}
