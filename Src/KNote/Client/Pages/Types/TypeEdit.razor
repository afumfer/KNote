@page "/types/edit/{TypeId}"

@inject IStore store
@inject DialogService dialogService

@attribute [Authorize(Roles = "Admin")]

@if (noteType != null)
{
    <TypeForm Title="Note type edit" OnValidSubmit="OnSave" OnExit="OnExit" NoteType="noteType" />
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string TypeId { get; set; }

    private NoteTypeDto noteType;

    protected async override Task OnInitializedAsync()
    {
        var result = await store.NoteTypes.GetAsync(Guid.Parse(TypeId));
        if (!result.IsValid)
        {            
            dialogService.Close(null);
        }
        else
        {
            noteType = result.Entity;
        }

        base.OnInitialized();
    }

    private async Task OnSave()
    {
        if (!noteType.IsDirty())
        {
            dialogService.Close(noteType);
        }
        else
        {
            if (noteType.IsValid())
            {
                var result = await store.NoteTypes.SaveAsync(noteType);
                if (result.IsValid)                                    
                {                    
                    dialogService.Close(result.Entity);
                }
            }
        }

    }

    private void OnExit()
    {        
        dialogService.Close(null);
    }
}
