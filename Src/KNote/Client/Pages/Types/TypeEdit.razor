@page "/types/edit/{TypeId}"

@inject IStore store
@inject DialogService dialogService
@*@inject NotificationService notificationService*@

@attribute [Authorize(Roles = "Admin")]

@if (noteType != null)
{
    <TypeForm Title="Note type edit" OnValidSubmit="OnSave" OnExit="OnExit" NoteType="noteType" />
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string TypeId { get; set; }

    private NoteTypeDto noteType;

    protected async override Task OnInitializedAsync()
    {
        var result = await store.NoteTypes.GetAsync(Guid.Parse(TypeId));
        //if (!result.IsValid)
        //{
        //    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get note type.", Detail =  result.Message, Duration = 12000 });
        //    dialogService.Close(null);
        //}
        //else
        //{
        //    noteType = result.Entity;
        //}
        if (!result.IsValid)
        {            
            dialogService.Close(null);
        }
        else
        {
            noteType = result.Entity;
        }

        base.OnInitialized();
    }

    private async Task OnSave()
    {
        if (!noteType.IsDirty())
        {
            dialogService.Close(noteType);
        }
        else
        {
            //if (!noteType.IsValid())         
            //    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save note type.", Detail =  noteType.GetErrorMessage(), Duration = 12000 });
            //else
            //{
            //    var result = await store.NoteTypes.SaveAsync(noteType);
            //    if (!result.IsValid)                    
            //        notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save note type.", Detail =  result.Message, Duration = 12000 });
            //    else
            //    {                    
            //        notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Save note type.", Detail =  "The data has been saved.", Duration = 3000 });
            //        dialogService.Close(result.Entity);
            //    }
            //}
            if (noteType.IsValid())
            {
                var result = await store.NoteTypes.SaveAsync(noteType);
                //if (!result.IsValid)
                //    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save note type.", Detail = result.Message, Duration = 12000 });
                //else
                //{
                //    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Save note type.", Detail = "The data has been saved.", Duration = 3000 });
                //    dialogService.Close(result.Entity);
                //}
                if (result.IsValid)                                    
                {                    
                    dialogService.Close(result.Entity);
                }
            }
        }

    }

    private void OnExit()
    {        
        dialogService.Close(null);
    }
}
