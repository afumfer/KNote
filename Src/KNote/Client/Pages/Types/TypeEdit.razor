@page "/types/edit/{TypeId}"

@inject IStore store
@inject DialogService dialogService

@attribute [Authorize(Roles = "Admin")]


<NavigationLock ConfirmExternalNavigation=true />

@if (noteType != null)
{
    <TypeForm Title="Note type edit" OnValidSubmit="OnSave" OnExit="OnExit" NoteType="noteType" />
}
else
{
    <text>Loading note type ... </text>
}

@code {
    [Parameter] public string TypeId { get; set; } = string.Empty;

    private NoteTypeDto? noteType;

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        Guid id;
        var parseOk = Guid.TryParse(TypeId, out id);
        if (!parseOk)
        {            
            await dialogService.Alert("Invalid note type identifier.");
            dialogService.Close(null);
            return;
        }

        var result = await store.NoteTypes.GetAsync(id);
        if (!result.IsValid)                    
            dialogService.Close(null);
        else
        {            
            noteType = result.Entity;
            noteType.SetIsDirty(false);
        }
    }

    private async Task OnSave()
    {
        if (!noteType!.IsDirty())
        {
            dialogService.Close(noteType);
        }
        else
        {
            if (noteType.IsValid())
            {
                var result = await store.NoteTypes.SaveAsync(noteType);
                if (result.IsValid)                                    
                {                    
                    dialogService.Close(result.Entity);
                }
            }
        }
    }

    private async Task OnExit()
    {        
        if (noteType == null)
        {
            dialogService.Close(null);
            return;
        }

        if (noteType.IsDirty())
        {
            var resultDialog = await dialogService.Confirm(
                @"Do you want to leave the page and lose your changes?",
                $"{KntConst.AppName}",
                new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

            if (resultDialog == true)
            {
                dialogService.Close(null);
            }
        }
        else
        {
            dialogService.Close(null);
        }
    }
}
