@page "/types/edit/{TypeId}"

@inject IWebApiService webApiService
@inject DialogService dialogService
@inject NotificationService notificationService

@*@inject NavigationManager navigationManager
@inject IShowMessages showMessages
*@

@attribute [Authorize(Roles = "Admin")]

@if (noteType != null)
{
    <TypeForm Title="Note type edit" OnValidSubmit="OnSave" OnExit="OnExit" NoteType="noteType" />
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string TypeId { get; set; }

    private NoteTypeDto noteType;

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.NoteTypes.GetAsync(Guid.Parse(TypeId));
        if (!result.IsValid)
        {
            //await showMessages.ShowErrorMessage(result.Message);
            //navigationManager.NavigateTo("index");
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get note type", Detail =  result.Message, Duration = 12000 });
            dialogService.Close(null);
        }
        else
        {
            noteType = result.Entity;
        }

        base.OnInitialized();
    }

    private async Task OnSave()
    {
        if (!noteType.IsDirty())
        {
            //navigationManager.NavigateTo("attributes");
            dialogService.Close(noteType);
        }
        else
        {
            if (!noteType.IsValid())
                //await showMessages.ShowErrorMessage(noteType.GetErrorMessage());
                notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save note type", Detail =  noteType.GetErrorMessage(), Duration = 12000 });
            else
            {
                var result = await webApiService.NoteTypes.SaveAsync(noteType);
                if (!result.IsValid)
                    // await showMessages.ShowErrorMessage(result.Message);
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save note type", Detail =  result.Message, Duration = 12000 });
                else
                {
                    //navigationManager.NavigateTo("types");
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Save note type", Detail =  "The data has been saved.", Duration = 3000 });
                    dialogService.Close(noteType);                    
                }
            }
        }

    }

    private void OnExit()
    {
        //navigationManager.NavigateTo("types");
        dialogService.Close(null);
    }
}
