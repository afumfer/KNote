@page "/types/edit/{TypeId}"

@inject IWebApiService webApiService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Admin")]


@if (noteType != null)
{
    <TypeForm Title="Note type edit" OnValidSubmit="OnSave" OnExit="OnExit" NoteType="noteType" />
}
else
{
    <text>Loading ... </text>
}


@code {
    [Parameter] public string TypeId { get; set; }

    private NoteTypeDto noteType;

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.NoteTypes.GetAsync(Guid.Parse(TypeId));
        if (!result.IsValid)
        {
            await showMessages.ShowErrorMessage(result.Message);
            navigationManager.NavigateTo("/");
        }
        else
        {
            noteType = result.Entity;
        }

        base.OnInitialized();
    }

    private async Task OnSave()
    {
        var result = await webApiService.NoteTypes.SaveAsync(noteType);
        if (!result.IsValid)
            await showMessages.ShowErrorMessage(result.Message);
        else
            navigationManager.NavigateTo("types");

    }

    private void OnExit()
    {
        navigationManager.NavigateTo("types");
    }
}
