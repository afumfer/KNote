@inject TooltipService tooltipService


<div class="row mb-1">
    <div class="col-6">
        <h5>Tasks for this note:</h5>
    </div>
    <div class="col-6 text-right">
        <RadzenButton Text="New task" Click="() => OnNew.InvokeAsync(null)" ButtonStyle="ButtonStyle.Primary" Class="mr-1" />  
    </div>
</div>

<EntityList List="Tasks">
    <ItemsFull>
        <RadzenDataGrid Data="@Tasks" TItem="NoteTaskDto" AllowColumnResize="true" Density="@Density.Compact" >
            <Columns>
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="UserFullName" Title="User name" />
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="Description" Title="Description" />
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="Priority" Title="Priority"  />
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="ExpectedStartDate" Title="Expected start" />                
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="ExpectedEndDate" Title="Expected end" />
                <RadzenDataGridColumn TItem="NoteTaskDto" Property="SpentTime" Title="Spent time" />
                <RadzenDataGridColumn TItem="NoteTaskDto" Title="Actions" Width="100px" TextAlign="TextAlign.Center" >
                    <Template Context="data">                                                        
                        <RadzenButton Click="@(() => OnEdit.InvokeAsync(data))" Icon="edit" Size="ButtonSize.Small"
                            ButtonStyle="ButtonStyle.Primary" 
                            MouseEnter="@(args => tooltipService.Open(args, "Edit task ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" Class="mr-0 mb-0"  />
                        <RadzenButton Click="@(() => OnDelete.InvokeAsync(data))" Icon="delete" Size="ButtonSize.Small"
                            ButtonStyle="ButtonStyle.Danger" 
                            MouseEnter="@(args => tooltipService.Open(args, "Delete task ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns> 
        </RadzenDataGrid>
    </ItemsFull>
</EntityList>

@code {
    [Parameter] public List<NoteTaskDto> Tasks { get; set; }
    [Parameter] public EventCallback<NoteTaskDto> OnDelete { get; set; }
    [Parameter] public EventCallback<NoteTaskDto> OnEdit { get; set; }
    [Parameter] public EventCallback OnNew { get; set; }

    private string ToShortDate(DateTime? dt)
    {
        if (dt == null)
            return "";
        else
            return dt.Value.ToShortDateString();
    }
}