<div class="container-fluid">
    <div class="row mb-2">
        <div class="col-6">
        </div>
        <div class="col-6 float-right">
            <button class="btn btn-sm btn-warning mx-1 float-right"
                    @onclick="@(() => OnNew.InvokeAsync(null))"
                    data-toggle="tooltip" title="New task for this note">
                New task
            </button>
        </div>
    </div>
</div>

<EntityList List="Tasks">
    <ItemsFull>
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th width="180px">User name</th>
                    <th>Description</th>
                    <th width="50px" class="text-center">Priority</th>
                    <th width="100px" class="text-center">Start date</th>
                    <th width="100px" class="text-center">End date</th>
                    <th width="50px" class="text-center">Resolved</th>
                    <th width="100px" class="text-center">(Actions)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Tasks)
                {
                <tr>
                    <td>@item.UserFullName</td>
                    <td data-toggle="tooltip" title="Tags: @item.Tags">@item.Description</td>
                    <td><center>@item.Priority</center></td>
                    <td data-toggle="tooltip" title="Expected start: @(ToShortDate(item.ExpectedStartDate))">@(ToShortDate(item.StartDate))</td>
                    <td data-toggle="tooltip" title="Expected end: @(ToShortDate(item.ExpectedEndDate))">@(ToShortDate(item.EndDate))</td>
                    <td data-toggle="tooltip" title="Spent time: @item.SpentTime">                        
                        <center><input type="checkbox" disabled @bind="@item.Resolved" /></center>
                    </td>
                    <td>
                        <span class="float-right">
                            <button class="btn btn-sm btn-warning mx-1"
                                    @onclick="@(() => OnEdit.InvokeAsync(item))"
                                    data-toggle="tooltip" title="Edit task">
                                <i class="fa fa-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-danger mx-1"
                                    @onclick="@(() => OnDelete.InvokeAsync(item))"
                                    data-toggle="tooltip" title="Delete task">
                                <i class="fa fa-minus"></i>
                            </button>
                        </span>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </ItemsFull>
</EntityList>

@code {
    [Parameter] public List<NoteTaskDto> Tasks { get; set; }
    [Parameter] public EventCallback<NoteTaskDto> OnDelete { get; set; }
    [Parameter] public EventCallback<NoteTaskDto> OnEdit { get; set; }
    [Parameter] public EventCallback OnNew { get; set; }

    private string ToShortDate(DateTime? dt)
    {
        if (dt == null)
            return "";
        else
            return dt.Value.ToShortDateString();
    }
}