@inject TooltipService tooltipService

 <RadzenCard class="m-1 p-1 bg-light">   
     
     <div class="row">
         <div class="col-sm-10">        
            <strong>@((MarkupString)Note.Topic) (#@Note.NoteNumber)</strong>
            <br />
            <small class="ml-3"><i>Creation: @(Note.CreationDateTime.ToShortDateString()) - Tags: @(Note.Tags)</i></small>
        </div>
        <div class="col-sm-2">
            <span class="float-right mt-1 mr-1">
                <AuthorizeView Roles="Admin, ProjecManager, Staff">
                    <Authorized>                    
                        <RadzenButton Click="@(() => OnNoteEdit.InvokeAsync(Note))" Icon="edit" 
                            ButtonStyle="ButtonStyle.Primary" 
                            MouseEnter="@(args => tooltipService.Open(args, "Edit note ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" Class="mr-0 mb-0"  />
                        <RadzenButton Click="@(() => OnNoteDelete.InvokeAsync(Note))" Icon="delete"
                            ButtonStyle="ButtonStyle.Danger" 
                            MouseEnter="@(args => tooltipService.Open(args, "Delete note ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" />

                    </Authorized>
                    <NotAuthorized>
                        <RadzenButton Click="@(() => OnNoteView.InvokeAsync(Note))" Icon="view" 
                            ButtonStyle="ButtonStyle.Primary" 
                            MouseEnter="@(args => tooltipService.Open(args, "View note ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" Class="mr-0 mb-0"  />
                    </NotAuthorized>
                </AuthorizeView>
            </span>
        </div>
    </div>

    @*<div class="row">*@
        <div class="bg-white p-2">
            <ViewMarkdown MarkdownContent="@Note.Description" />
        </div>
    @*</div>*@

</RadzenCard>


@code {
    [Parameter] public NoteInfoDto Note { get; set; }
    [Parameter] public EventCallback<NoteInfoDto> OnNoteDelete { get; set; }
    [Parameter] public EventCallback<NoteInfoDto> OnNoteEdit { get; set; }
    [Parameter] public EventCallback<NoteInfoDto> OnNoteView { get; set; }    
}
