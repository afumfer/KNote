@page "/testpage1"

@inject AppState appState
@inject IGenericDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

@inject IWebApiService webApiService

<h3>Test page 1</h3>
<hr />

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 1) ? "active" : "")" @onclick="@(() => ShowPanel(1))">
            <span class="oi oi-document mr-2"></span>Counter
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 2) ? "active" : "")" @onclick="@(() => ShowPanel(2))">
            <span class="oi oi-bookmark mr-2"></span>Folder Selector
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 3) ? "active" : "")" @onclick="@(() => ShowPanel(3))">
            <span class="oi oi-cloud-upload mr-2"></span>AppState
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 4) ? "active" : "")" @onclick="@(() => ShowPanel(4))">
            <span class="oi oi-task mr-2"></span>KntResource upload
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 5) ? "active" : "")" @onclick="@(() => ShowPanel(5))">
            <span class="oi oi-envelope-open mr-2"></span>File upload
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 6) ? "active" : "")" @onclick="@(() => ShowPanel(6))">
            <span class="oi oi-external-link mr-2"></span>WebApiService
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 7) ? "active" : "")" @onclick="@(() => ShowPanel(7))">
            <span class="oi oi-flag mr-2"></span>... panel 7
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 8) ? "active" : "")" @onclick="@(() => ShowPanel(8))">
            <span class="oi oi-terminal mr-2" aria-hidden="true"></span>... panel 8
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link disabled" href="#">Tab disabled</a>
    </li>
</ul>


<div class="@((selectedPanel == 1) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-4"> Counter (panel: @selectedPanel)</h4>

    <p>Data for panel @selectedPanel</p>

    <p>Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

</div>

<div class="@((selectedPanel == 2) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> OnFolderSelectorTest (panel: @selectedPanel)</h4>

    <p>Folder selector</p>

    <button class="btn btn-primary" @onclick="OnFolderSelectorTest">Folder selector test</button>

    @if (folderSelected != null)
    {
        <p>@folderSelected.Name </p>
    }

</div>

<div class="@((selectedPanel == 3) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> AppState (panel: @selectedPanel)</h4>

    <p>AppState with cascading parameter</p>

    <p>appState.AppMode: @appState.AppMode</p>

    <div style="display:flex;">
        <div style="width: 150px">
            <select @bind="@appState.AppMode" class="form-control" style="margin-top: 15px">
                <option value="Task">Task</option>
                <option value="Blog">Blog</option>
                <option value="Wiki">Wiki</option>
            </select>
        </div>
    </div>

</div>

<div class="@((selectedPanel == 4) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> KntResource upload  (panel: @selectedPanel)</h4>

    <button class="btn btn-primary" @onclick="OnKntResourceTest">KntResource selector test</button>

    @if (resourceSelected != null)
    {
        <p>Name: @resourceSelected.Name</p>
        <p>FullUrl: @resourceSelected.FullUrl</p>
        <p>Description: @resourceSelected.Description</p>
        <p>Container: @resourceSelected.Container</p>
        <p>FileType: @resourceSelected.FileType</p>
        <p>Order: @resourceSelected.Order </p>
        <p>ResourceId: @resourceSelected.ResourceId </p>
        <p>NoteId: @resourceSelected.NoteId </p>

        @if (resourceSelected.FileType == "image/jpeg")
        {
            <hr />
            <div>
                <div style="margin:10px">
                    <img src="data:image/jpeg;base64, @resourceSelected.ContentBase64" style="width: 400px;" />
                </div>
            </div>
            <hr />
        }

    }


</div>

<div class="@((selectedPanel == 5) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> File upload (panel: @selectedPanel)</h4>

    <InputFileUpload Label="Upload generic file" OnSelectedFile="OnFileSelected" />

    @if (resourceControl == null)
    {
        <p>Subiendo fichero .... </p>
    }
    else
    {
        <p>Name: @resource.Name</p>
        <p>FullUrl: @resource.FullUrl</p>
        <p>Description: @resource.Description</p>
    }

</div>

<div class="@((selectedPanel == 6) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h5 class="mt-4"> Test WebApiService (panel: @selectedPanel)</h5>

    <button class="btn btn-primary" @onclick="TestWebApiService">TestWebApiService</button>

    @if (users != null)
    {
        foreach (var user in users)
        {
            <p>@user.FullName</p>
        }
    }


</div>

<div class="@((selectedPanel == 7) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<div class="@((selectedPanel == 8) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<hr />

<KntFolderSelector @ref="kntFolderSelector" OnCancel="onCancel" OnConfirm="onConfirm"></KntFolderSelector>

<KntResourceSelector @ref="kntResourceSelector" OnCancel="onCancelResource" OnConfirm="onConfirmResource"></KntResourceSelector>

@code {
    
    [CascadingParameter] private Task<AuthenticationState> athenticationState { get; set; }

    private int selectedPanel = 1;

    private int currentCount = 0;
    private KntFolderSelector kntFolderSelector;
    private KntResourceSelector kntResourceSelector;

    private FolderDto folderSelected;
    private ResourceInfoDto resourceSelected;

    private ResourceInfoDto resource = new ResourceInfoDto();
    private string resourceControl = "0";

    #region Test incremente count

    private async Task IncrementCount()
    {
        var authState = await athenticationState;

        var user = authState.User;

        if (user.Identity.IsAuthenticated)
            currentCount++;
        else
            currentCount--;
    }

    #endregion

    #region  AppState changed subscription

    protected override void OnInitialized()
    {
        appState.OnChange += StateHasChanged;
        base.OnInitialized();
    }

    public void Dispose()
    {
        appState.OnChange -= StateHasChanged;
    }

    #endregion

    #region Test Folder Selector

    private void OnFolderSelectorTest()
    {
        kntFolderSelector.Show();
    }

    private void onConfirm(FolderDto f)
    {
        folderSelected = f;
        kntFolderSelector.Hide();
    }

    private void onCancel()
    {
        kntFolderSelector.Hide();
    }

    #endregion

    #region Test Resource Selector

    private void OnKntResourceTest()
    {
        kntResourceSelector.Show();
    }

    private async Task onConfirmResource(ResourceInfoDto r)
    {
        resourceSelected = r;
        kntResourceSelector.Hide();
        await showMessages.ShowOkMessage("File upload!");
    }

    private void onCancelResource()
    {
        kntResourceSelector.Hide();
    }

    #endregion

    #region Show Panel Method

    private void ShowPanel(int panel)
    {
        selectedPanel = panel;
    }

    #endregion

    #region Test file upload

    private async Task OnFileSelected(KntFileInfo file)
    {
        resourceControl = null;

        resource.ContentBase64 = file.ContentBase64;
        resource.Name = file.Name;
        resource.FileType = file.Type;
        resource.Description = file.Type + " - " + file.LastModifiedDate.ToString() + " - " + file.Size.ToString();

        var httpResponse = await dataService.Post<ResourceInfoDto, Result<ResourceInfoDto>>("api/notes/savefile", resource);
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            resource = httpResponse.Response.Entity;
            await showMessages.ShowOkMessage("File upload!");
        }

        resourceControl = "1";
    }

    #endregion

    #region Test WebApiService

    List<UserDto> users;

    private async Task TestWebApiService()
    {
        var resUser = await webApiService.Users.GetAllAsync();

        users = resUser.Entity.ToList();
    }

    #endregion
}
