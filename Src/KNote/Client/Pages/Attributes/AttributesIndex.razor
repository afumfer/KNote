@page "/attributes"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <h3>Attributes index</h3>
        </div>
        <div class="col-6 float-right">            
            <button class="btn btn-sm btn-warning mx-1 float-right"
                    @onclick="GoNewAttribute"
                    data-toggle="tooltip" title="New attribute">
                <i class="oi oi-bookmark"></i> New attribute
            </button>
        </div>
    </div>
</div>
<hr class="mt-0" />

<EntityList List="attributes">
    <ItemsFull>
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th width="60px" class="text-center">Order</th>
                    <th width="250px">Name</th>
                    <th>For note type ...</th>
                    <th width="90px">Required</th>
                    <th width="180px">DataType</th>
                    <th width="100px" class="text-center">(Actions)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in attributes)
                {
                <tr>
                    <td class="text-right">@item.Order</td>
                    <td>@item.Name</td>
                    <td>
                        @if (item.NoteTypeDto == null)
                        {
                            <span>(All)</span>
                        }
                        else
                        {
                            <span>@item.NoteTypeDto?.Name</span>
                        }
                    </td>
                    <td>@item.RequiredValue</td>
                    <td>@KntConst.KAttributes[item.KAttributeDataType]</td>
                    <td>
                        <span class="float-right">
                            <a href="attributes/edit/@item.KAttributeId" class="btn btn-sm btn-warning mx-1"
                               data-toggle="tooltip" title="Edit user">
                                <i class="fa fa-pencil"></i>
                            </a>
                            <button class="btn btn-sm btn-danger mx-1"
                                    @onclick="@(() => Delete(item))"
                                    data-toggle="tooltip" title="Delete user">
                                <i class="fa fa-minus"></i>
                            </button>
                        </span>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </ItemsFull>
</EntityList>

<ModalDialog @ref="modalDialog" Title="Delete attribute" onConfirm="OnConfirmDelete" onCancel="OnCancelDelete">
    <div><p>Are you sure you want to delete attribute "@itemDelete.Name" ?</p></div>
</ModalDialog>

@code {
    
    private List<KAttributeDto> attributes { get; set; }
    private ModalDialog modalDialog;
    private KAttributeDto itemDelete;

    protected async override Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {        
        var httpResponse = await dataService.Get<Result<List<KAttributeDto>>>("api/kattributes");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            attributes = httpResponse.Response.Entity;
        }
    }
    
    private void Delete(KAttributeDto item)
    {
        modalDialog.Show();
        itemDelete = item;
    }

    private async Task OnConfirmDelete()
    {
        modalDialog.Hide();

        var httpResponse = await dataService.Delete($"api/kattributes/{itemDelete.KAttributeId}");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            await Load();
        }

        itemDelete = null;
    }

    private void OnCancelDelete()
    {
        modalDialog.Hide();
        itemDelete = null;
    }

    void GoNewAttribute()
    {
        navigationManager.NavigateTo($"attributes/new");
    }

}

