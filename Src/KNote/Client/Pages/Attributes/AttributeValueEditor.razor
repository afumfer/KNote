@inject NotificationService notificationService
@inject DialogService dialogService

<EditForm Model="atrValue" Context="formContextValue">
   
    <div class="form-group">
        <label>Value:</label>
        <InputText class="form-control p-2" @bind-Value="@atrValue.Value" />
        <ValidationMessage For="@(() => atrValue.Value)" />
    </div>

    <div class="form-group">
        <label>Order:</label>
        <InputNumber class="form-control p-2" @bind-Value="@atrValue.Order" />
        <ValidationMessage For="@(() => atrValue.Order)" />
    </div>
   
    <hr class="mt-1" />

    <div class="row">
        <div class="col-md-12 text-right">
            <RadzenButton Text="Ok" Click="(() => OnConfirmSave(formContextValue))" ButtonStyle="ButtonStyle.Primary" Class="mr-1"  />  
            <RadzenButton Text="Cancel" Click="OnCancel" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" />                                       
        </div>
    </div>

</EditForm>


@code {
    [Parameter] public KAttributeTabulatedValueDto AtrValue { get; set; }

    private KAttributeTabulatedValueDto atrValue { get; set; }

    protected async override Task OnInitializedAsync()
    {
        if (AtrValue != null)
        {
            atrValue = AtrValue.GetSimpleDto<KAttributeTabulatedValueDto>();
            atrValue.SetIsNew(false);
        }
        else
        {
            atrValue = new KAttributeTabulatedValueDto();
            atrValue.KAttributeTabulatedValueId = Guid.NewGuid();
            atrValue.SetIsNew(true);
        }
        atrValue.SetIsDirty(false);

        await base.OnInitializedAsync();
    }

    private void OnConfirmSave(EditContext formContext)
    {
        bool formIsValid = formContext.Validate();
        if (formIsValid == false)
        {
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Edit attribute tabulated value.", Detail =  "Incorrect data, check the required attributes.", Duration = 12000 });            
            return;
        }
        
        dialogService.Close(atrValue);
    }

    private void OnCancel()
    {
        dialogService.Close(null);
    }

}