@page "/attributes/new"

@inject IStore store
@inject DialogService dialogService

@attribute [Authorize(Roles = "Admin")]


<NavigationLock ConfirmExternalNavigation=true />

@if (showForm)
{
    <AttributeForm OnValidSubmit="OnNew" OnExit="OnExit" KAttribute="kattribute" NoteTypes="noteTypes" />
}
else
{
    <text>Loading ... </text>
}

@code {
    private KAttributeDto kattribute = new KAttributeDto();
    private bool showForm = false;
    private List<NoteTypeDto> noteTypes = new List<NoteTypeDto>();

    protected async override Task OnInitializedAsync()
    {
        var result = await store.NoteTypes.GetAllAsync();
        if (result.IsValid)
        {
            noteTypes = result.Entity;
            showForm = true;
        }

        kattribute.SetIsNew(true);

        base.OnInitialized();
    }

    private async Task OnNew()
    {
        if (kattribute.IsValid())
        {
            var result = await store.KAttributes.SaveAsync(kattribute);
            if (result.IsValid)
            {
                dialogService.Close(result.Entity);
            }
        }
    }

    private async Task OnExit()
    {
        if (kattribute == null)
        {
            dialogService.Close(null);
            return;
        }

        if (kattribute.IsDirty())
        {
            var resultDialog = await dialogService.Confirm(
                @"Do you want to leave the page and lose your changes?",
                $"{KntConst.AppName}",
                new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

            if (resultDialog == true)
            {
                dialogService.Close(null);
            }
        }
        else
        {
            dialogService.Close(null);
        }
    }
}
