@page "/attributes/new"

@inject IWebApiService webApiService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Admin")]

@if (showForm)
{
    <AttributeForm Title="New Attribute" OnValidSubmit="OnNew" OnExit="OnExit" KAttribute="kattribute" NoteTypes="noteTypes" />
}
else
{
    <text>Loading ... </text>
}

@code {
    private KAttributeDto kattribute = new KAttributeDto();
    private bool showForm = false;
    private List<NoteTypeDto> noteTypes = new List<NoteTypeDto>();

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.NoteTypes.GetAllAsync();
        if(!result.IsValid)
            await showMessages.ShowErrorMessage(result.Message);
        else
        {
            noteTypes = result.Entity;
            showForm = true;
        }

        base.OnInitialized();
    }

    private async Task OnNew()
    {
        var response = await webApiService.KAttributes.SaveAsync(kattribute);
        if (!response.IsValid)        
            await showMessages.ShowErrorMessage(response.Message);        
        else        
            navigationManager.NavigateTo("attributes");       
    }

    private void OnExit()
    {
        navigationManager.NavigateTo("attributes");
    }
}
