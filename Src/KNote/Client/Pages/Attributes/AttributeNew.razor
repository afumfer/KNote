@page "/attributes/new"

@inject IWebApiService webApiService
@inject DialogService dialogService
@inject NotificationService notificationService

@attribute [Authorize(Roles = "Admin")]

@if (showForm)
{
    <AttributeForm OnValidSubmit="OnNew" OnExit="OnExit" KAttribute="kattribute" NoteTypes="noteTypes" />
}
else
{
    <text>Loading ... </text>
}

@code {
    private KAttributeDto kattribute = new KAttributeDto();
    private bool showForm = false;
    private List<NoteTypeDto> noteTypes = new List<NoteTypeDto>();

    protected async override Task OnInitializedAsync()
    {
        var result = await webApiService.NoteTypes.GetAllAsync();
        if(!result.IsValid)            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get note types", Detail =  result.Message, Duration = 12000 });
        else
        {
            noteTypes = result.Entity;
            showForm = true;
        }

        kattribute.SetIsNew(true);

        base.OnInitialized();
    }

    private async Task OnNew()
    {
        if (!kattribute.IsValid())            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save attribute", Detail =  kattribute.GetErrorMessage(), Duration = 12000 });
        else
        {
            var result = await webApiService.KAttributes.SaveAsync(kattribute);
            if (!result.IsValid)                
                notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save attribute", Detail = result.Message, Duration = 12000 });
            else
            {                
                notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "New attribute", Detail =  "The attribute has been created.", Duration = 3000 });
                //dialogService.Close(kattribute);
                dialogService.Close(result.Entity);
            }
        }
    }

    private void OnExit()
    {
        dialogService.Close(null);
    }
}
