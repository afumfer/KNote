@inject DialogService dialogService
@inject NotificationService notificationService
@inject TooltipService tooltipService

<EditForm Model="KAttribute" Context="formContext">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group row">
        <label for="atrName" class="col-sm-2 col-form-label">Name:</label>
        <div class="input-group col-sm-10" id="atrName">
            <InputText class="form-control" @bind-Value="@KAttribute.Name" />
        </div>        
        <label class="col-sm-2 col-form-label" style="font-size:10px"></label>
        <div class="col-sm-10 pl-4"  style="font-size:10px">
            <ValidationMessage For="@(() => KAttribute.Name)"/>
        </div>
    </div>

    <div class="form-group row">
        <label for="atrDescription" class="col-sm-2 col-form-label">Description:</label>
        <div class="input-group col-sm-10" id="atrDescription">
            <InputTextArea class="form-control" @bind-Value="@KAttribute.Description" />
        </div>
        <label class="col-sm-2 col-form-label" style="font-size:10px"></label>
        <div class="col-sm-10 pl-4"  style="font-size:10px">
            <ValidationMessage For="@(() => KAttribute.Description)" />
        </div>        
    </div>

    <div class="form-group row">
        <label for="atrRequired" class="col-sm-2 col-form-label">Required Value:</label>
        <div class="input-group col-sm-1" id="atrRequired">
            @*<InputCheckbox class="form-control ali" @bind-Value="@KAttribute.RequiredValue" />*@
            <RadzenCheckBox Style="vertical-align: middle;"  @bind-Value=@KAttribute.RequiredValue  Name="CheckRequiredValue" TValue="bool" />
        </div>
        <label for="atrRequired" class="col-sm-1 col-form-label">Order:</label>
        <div class="input-group col-sm-2" id="atrRequired">
            <InputNumber class="form-control" @bind-Value="@KAttribute.Order" />
        </div>
        <label for="atrRequired" class="col-sm-2 col-form-label">Note type:</label>
        <div class="input-group col-sm-4" id="atrRequired">
            <select class="form-control" @bind="@KAttribute.NoteTypeId">
                <option></option>
                @foreach (var ntype in NoteTypes)
                {
                    <option value=@ntype.NoteTypeId>@ntype.Name</option>
                }
            </select>
        </div>
        <!-- -->
        <label class="col-sm-2 col-form-label" style="font-size:10px"></label>
        <div class="col-sm-4 pl-1"  style="font-size:10px">
            <ValidationMessage For="@(() => KAttribute.RequiredValue)" />
        </div> 
        <label class="col-sm-1 col-form-label" style="font-size:10px"></label>
        <div class="col-sm-2 pl-4"  style="font-size:10px">
            <ValidationMessage For="@(() => KAttribute.Order)" />
        </div>
        <label class="col-sm-2 col-form-label" style="font-size:10px"></label>
        <div class="col-sm-4 pl-4"  style="font-size:10px">
            <ValidationMessage For="@(() => KAttribute.NoteTypeId)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="atrDataType" class="col-sm-2 col-form-label">Data Type:</label>
        <div class="input-group col-sm-10" id="atrDataType">
            <select class="form-control" @bind="@KAttribute.KAttributeDataType">
                @foreach (var item in KntConst.KAttributes.Keys)
                {
                    <option value=@item>@KntConst.KAttributes[item]</option>
                }
            </select>
        </div>
        <ValidationMessage For="@(() => KAttribute.KAttributeDataType)" />
    </div>

    @if (KAttribute.KAttributeDataType == EnumKAttributeDataType.TabulatedValue || KAttribute.KAttributeDataType == EnumKAttributeDataType.TagsValue)
    {
        <div class="form-group row">
            <label for="atrValues" class="col-sm-2 col-form-label">&nbsp;</label>
            <div class="input-group col-sm-10" id="atrDescription">
                <label class="float-left">Tabulated values for this attribute:</label>
                <span class="float-left ml-3">
                    <button class="btn btn-sm btn-light mr-2"
                            @onclick="@(() => OnAtrValueNew())"
                            data-toggle="tooltip" title="Add new value">
                        <i class="fa fa-plus"></i>
                    </button>
                </span>
                <RadzenDataGrid Data="@atributeValues" TItem="KAttributeTabulatedValueDto" AllowColumnResize="true" Density="@Density.Compact">
                    <Columns>
                        <RadzenDataGridColumn TItem="KAttributeTabulatedValueDto" Property="Value" Title="Value" />
                        <RadzenDataGridColumn TItem="KAttributeTabulatedValueDto" Property="Order" Title="Order" Width="190px" />                
                        <RadzenDataGridColumn TItem="KAttributeTabulatedValueDto" Title="Actions" Width="100px" TextAlign="TextAlign.Center" >
                            <Template Context="data">                                                        
                                <RadzenButton Click="@(() => OnAtrValueEdit(data))" Icon="edit" Size="ButtonSize.Small"
                                    ButtonStyle="ButtonStyle.Primary" 
                                    MouseEnter="@(args => tooltipService.Open(args, "Edit  ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" Class="mr-0 mb-0"  />
                                <RadzenButton Click="@(() => OnAtrValueDelete(data))" Icon="delete" Size="ButtonSize.Small"
                                    ButtonStyle="ButtonStyle.Danger" 
                                    MouseEnter="@(args => tooltipService.Open(args, "Delete ...", new TooltipOptions(){ Position = TooltipPosition.Left }) )" />
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns> 
                </RadzenDataGrid>
            </div>
        </div>
    }

    <hr class="mt-1" />

    <div class="row">
        <div class="col-md-12 text-right">
            <RadzenButton Text="Save" Click="() => Save(formContext)" ButtonStyle="ButtonStyle.Primary" Class="mr-1"  />  
            <RadzenButton Text="Cancel" Click="() => OnExit.InvokeAsync(null)" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" />                                       
        </div>
    </div>
    

</EditForm>

@code {

    [Parameter] public KAttributeDto KAttribute { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback OnExit { get; set; }
    [Parameter] public List<NoteTypeDto> NoteTypes { get; set; } = new List<NoteTypeDto>();
    
    List<KAttributeTabulatedValueDto> atributeValues;

    protected override void OnInitialized()
    {
        // This is necesary for correct binding with Radzen grid
        atributeValues = KAttribute.KAttributeValues.ToList();
    }

    protected async Task Save(EditContext formContext)
    {
        bool formIsValid = formContext.Validate();

        if (formIsValid == false)
        {            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save attribute.", Detail =  "Incorrect data, check the required attributes.", Duration = 12000 });
            return;
        }

        await OnValidSubmit.InvokeAsync(formContext);
    }

    async Task OnAtrValueNew()
    {        
        await AtrValueEdit(null);
    }

    async Task OnAtrValueEdit(KAttributeTabulatedValueDto atrEdit)
    {        
        await AtrValueEdit(atrEdit);
    }

    async Task OnAtrValueDelete(KAttributeTabulatedValueDto atrValue)
    {
        var resultDialog = await dialogService.Confirm(
            $"Are you sure you want delete this attribute tabulated value?", 
            "Delete note type", 
            new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });

        if (resultDialog == true)
        {
            KAttribute.KAttributeValues.Remove(atrValue);
            KAttribute.SetIsDirty(true, false);
        }
    }

    async Task AtrValueEdit(KAttributeTabulatedValueDto atrValue)
    {
        var resAtrEdited = await dialogService.OpenAsync<AttributeValueEditor>($"Edit attribute tabulated value",
               new Dictionary<string, object>() { { "AtrValue", atrValue } },
               new DialogOptions() { Width = "600px", Height = "300px", Resizable = true, Draggable = true });

        if(resAtrEdited != null)
        {
            if (!resAtrEdited.IsDirty())
                return;

            var atrOld = KAttribute.KAttributeValues.Where(v => v.KAttributeTabulatedValueId == resAtrEdited.KAttributeTabulatedValueId).SingleOrDefault();

            if (atrOld == null)
            {
                resAtrEdited.KAttributeId = KAttribute.KAttributeId;
                resAtrEdited.SetIsNew(true);
                KAttribute.KAttributeValues.Add(resAtrEdited);
            }
            else
            {
                var i = KAttribute.KAttributeValues.IndexOf(atrOld);
                KAttribute.KAttributeValues.RemoveAt(i);
                KAttribute.KAttributeValues.Insert(i, resAtrEdited);
            }                
        }
        // This is necesary for correct binding with Radzen grid
        atributeValues = KAttribute.KAttributeValues.ToList();

        StateHasChanged();
    }

}
