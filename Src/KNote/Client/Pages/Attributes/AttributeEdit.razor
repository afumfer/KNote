@page "/attributes/edit/{AttributeId}"

@inject IWebApiService webApiService
@inject DialogService dialogService
@inject NotificationService notificationService

@attribute [Authorize(Roles = "Admin")]

@if (kattribute != null && showForm)
{
    <AttributeForm OnValidSubmit="OnSave" OnExit="OnExit" KAttribute="kattribute" NoteTypes="noteTypes" />
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string AttributeId { get; set; }

    private KAttributeDto kattribute;
    private bool showForm = false;
    private List<NoteTypeDto> noteTypes = new List<NoteTypeDto>();

    protected async override Task OnInitializedAsync()
    {

        var result = await webApiService.KAttributes.GetAsync(Guid.Parse(AttributeId));
        if (!result.IsValid)
        {            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get attributes", Detail =  result.Message, Duration = 12000 });
            dialogService.Close(null);
        }
        else
        {
            kattribute = result.Entity;
            kattribute.SetIsDirty(false);
        }

        var result2 = await webApiService.NoteTypes.GetAllAsync();
        if (!result2.IsValid)
        {            
            notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Get note types", Detail =  result.Message, Duration = 12000 });
            dialogService.Close(null);
        }
        else
        {
            noteTypes = result2.Entity;
            showForm = true;
        }

        await base.OnInitializedAsync();
    }

    private async Task OnSave()
    {
        if (!kattribute.IsDirty())
        {            
            dialogService.Close(kattribute);
        }
        else
        {
            if (!kattribute.IsValid())
                notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save attribute", Detail =  kattribute.GetErrorMessage(), Duration = 12000 });
            else
            {
                var result = await webApiService.KAttributes.SaveAsync(kattribute);
                if (!result.IsValid)
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Save attribute", Detail =  result.Message, Duration = 12000 });
                else
                {
                    notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Save attribute", Detail =  "The data has been saved.", Duration = 3000 });
                    dialogService.Close(result.Entity);
                }
            }
        }
    }

    private void OnExit()
    {
        dialogService.Close(null);
    }

}
