@inject AppState appState
@inject IGenericDataService  dataService
@inject DialogService dialogService

@implements IDisposable

<div class="row">
    <div class="col-md-12 overflow-auto" style="height:380px">
        <KntFoldersTreeView FoldersInfo="@foldersTree"
                            FolderSelected="OnFolderSelected">
        </KntFoldersTreeView>
    </div>
</div>

<div class="row">
    <div class="col-md-12 text-right">
        <RadzenButton Text="Ok" Click="() => OnConfirm()" ButtonStyle="ButtonStyle.Primary" Class="mr-1"  />  
        <RadzenButton Text="Cancel" Click="() => OnCancel()" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" />                                       
    </div>
</div>


@code {    

    private List<FolderDto> foldersTree;
    private bool ShowDialog = false;
    private FolderDto folderSelected;

    public void Show() => ShowDialog = true;
    public void Hide() => ShowDialog = false;

    protected override async Task OnInitializedAsync()
    {
        appState.OnChange += StateHasChanged;
        if (foldersTree == null)
        {
            if (appState.FoldersTree == null)
            {
                var res = await dataService.Get<Result<List<FolderDto>>>("api/folders/gettree");
                foldersTree = res.Response.Entity;
                appState.FoldersTree = foldersTree;

                if (foldersTree?.Count > 0)
                {
                    var f = foldersTree.Select(x => x).FirstOrDefault();
                    f.Selected = true;
                    OnFolderSelected(f);
                }
            }
            else
            {
                foldersTree = appState.FoldersTree;
                OnFolderSelected(appState.SelectedFolder.GetSimpleDto<FolderDto>());
            }
        }
    }

    public void Dispose()
    {
        appState.OnChange -= StateHasChanged;
    }

    private void OnFolderSelected(FolderDto f)
    {
        folderSelected = f;
    }

    void OnConfirm()
    {        
        dialogService.Close(folderSelected);
    }

    void OnCancel()
    {        
        dialogService.Close(null);
    }
}