@inherits InputTextArea
@using System.Linq.Expressions
@typeparam TValue

<div>

    <label>@labelMode</label>
    <!-- <span class="float-left"> -->
    <span>
        <button class="btn btn-sm btn-light mx-1"
                @onclick="EditMode"
                data-toggle="tooltip" title="Show edit mode">
            <i class="fa fa-edit">Edit</i>
        </button>
        <button class="btn btn-sm btn-light mx-1"
                @onclick="ViewMode"
                data-toggle="tooltip" title="Show view mode">
            <i class="fa fa-edit">View</i>
        </button>
    </span>

    @if (editMode)
    {
        <div>
            <InputTextArea @bind-Value="CurrentValue" />
            <ValidationMessage For="For" />
        </div>
    }
    else
    {
        <div class="markdown-container" style="overflow: auto;">
            <ViewMarkdown MarkdownContent="@CurrentValue">

            </ViewMarkdown>
        </div>
    }

</div>


@code {

    [Parameter] public Expression<Func<TValue>> For { get; set; }
    [Parameter] public string Label { get; set; }

    private string labelMode;
    private bool editMode = true;

    protected override void OnInitialized()
    {
        labelMode = Label + " (edit mode): ";
        base.OnInitialized();
    }

    private void EditMode()
    {
        editMode = true;
        labelMode = Label + " (markdown edit mode): ";
    }

    private void ViewMode()
    {
        editMode = false;
        labelMode = Label + " (preview mode): ";
    }
}
