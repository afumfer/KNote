@inject IKntClientDataService  dataService
@inject IShowMessages showMessages
@inject NavigationManager navigationManger

@if (ShowRefreshTree)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-10">
                <h5>Folders catalog</h5>
            </div>
            <div class="col-2 float-right">
                <button class="btn btn-sm btn-success mb-0 float-right"
                        @onclick="OnRefreshTreeFolders"
                        data-toggle="tooltip" title="Refresh tree folders">
                    <i class="fa fa-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <hr class="mt-1" />
}

<KntFoldersTreeNode FoldersInfo="@FoldersInfo"
                    FolderSelected="OnFolderSelected"
                    EditMode="EditMode"
                    FolderDelete="OnFolderDelete"
                    FolderEdit="OnFolderEdit">
</KntFoldersTreeNode>

@code {
    [CascadingParameter] public AppState appState { get; set; }

    [Parameter] public List<FolderInfoDto> FoldersInfo { get; set; }
    [Parameter] public EventCallback<FolderInfoDto> FolderSelected { get; set; }
    [Parameter] public EventCallback<FolderInfoDto> FolderDelete { get; set; }
    [Parameter] public EventCallback<FolderInfoDto> FolderEdit { get; set; }
    [Parameter] public EventCallback RefreshTreeFolders { get; set; }
    [Parameter] public bool EditMode { get; set; }
    [Parameter] public bool ShowRefreshTree { get; set; }


    protected override void OnInitialized()
    {
        appState.OnChange += StateHasChanged;

        base.OnInitialized();
    }

    public void Dispose()
    {
        appState.OnChange -= StateHasChanged;
    }

    protected async Task OnFolderSelected(FolderInfoDto folder)
    {
        await FolderSelected.InvokeAsync(folder);
    }

    private async Task OnFolderDelete(FolderInfoDto folder)
    {
        await FolderDelete.InvokeAsync(folder);
    }

    private async Task OnFolderEdit(FolderInfoDto folder)
    {
        await FolderEdit.InvokeAsync(folder);
    }

    private async Task OnRefreshTreeFolders()
    {
        await RefreshTreeFolders.InvokeAsync(null);
    }

}