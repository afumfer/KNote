@using System.IO
@inject IFileReaderService fileReaderService
@using Blazor.FileReader

<div>
    <label>@Label</label>
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" />
    </div>
</div>
<div>
    <div>
        <div style="margin:10px">
            <img src="@imgSrc" style="width: 400px;" />
        </div>
    </div>
</div>

@code {
    [Parameter] public string Label { get; set; } = "Image";
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    [Parameter] public string ImageBase64 { get; set; }

    private string imgSrc;
    ElementReference inputElement;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(ImageBase64))
        {
            imgSrc = "data:image/jpeg;base64, " + ImageBase64;
        }
    }

    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var imageBytes = new byte[memoryStream.Length];
                memoryStream.Read(imageBytes, 0, (int)memoryStream.Length);
                ImageBase64 = Convert.ToBase64String(imageBytes);
                imgSrc = "data:image/jpeg;base64, " + ImageBase64;
                await OnSelectedImage.InvokeAsync(ImageBase64);
                StateHasChanged();
            }
        }
    }
}
