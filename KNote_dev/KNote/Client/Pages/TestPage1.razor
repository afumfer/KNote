@page "/testpage1"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

<h3>Test page 1</h3>
<hr />

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 1) ? "active" : "")" @onclick="@(() => ShowPanel(1))">
            <span class="oi oi-document mr-2"></span>Counter
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 2) ? "active" : "")" @onclick="@(() => ShowPanel(2))">
            <span class="oi oi-bookmark mr-2"></span>Folder Selector
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 3) ? "active" : "")" @onclick="@(() => ShowPanel(3))">
            <span class="oi oi-cloud-upload mr-2"></span>AppState
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 4) ? "active" : "")" @onclick="@(() => ShowPanel(4))">
            <span class="oi oi-task mr-2"></span>Upload file
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 5) ? "active" : "")" @onclick="@(() => ShowPanel(5))">
            <span class="oi oi-envelope-open mr-2"></span> ... panel 5
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 6) ? "active" : "")" @onclick="@(() => ShowPanel(6))">
            <span class="oi oi-external-link mr-2"></span>... panel 6
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 7) ? "active" : "")" @onclick="@(() => ShowPanel(7))">
            <span class="oi oi-flag mr-2"></span>... panel 7
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @((selectedPanel == 8) ? "active" : "")" @onclick="@(() => ShowPanel(8))">
            <span class="oi oi-terminal mr-2" aria-hidden="true"></span>... panel 8
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link disabled" href="#">Tab disabled</a>
    </li>
</ul>


<div class="@((selectedPanel == 1) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-4"> Counter (panel: @selectedPanel)</h4>

    <p>Data for panel @selectedPanel</p>

    <p>Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

</div>

<div class="@((selectedPanel == 2) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> OnFolderSelectorTest (panel: @selectedPanel)</h4>

    <p>Folder selector</p>

    <button class="btn btn-primary" @onclick="OnFolderSelectorTest">Folder selector test</button>

    @if (folderSelected != null)
    {
        <p>@folderSelected.Name </p>
    }

</div>

<div class="@((selectedPanel == 3) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> AppState (panel: @selectedPanel)</h4>

    <p>AppState with cascading parameter</p>

    <p>appState.AppMode: @appState.AppMode</p>

    <div style="display:flex;">
        <div style="width: 150px">
            <select @bind="@appState.AppMode" class="form-control" style="margin-top: 15px">
                <option value="Task">Task</option>
                <option value="Blog">Blog</option>
                <option value="Wiki">Wiki</option>
            </select>
        </div>
    </div>

</div>

<div class="@((selectedPanel == 4) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> Upload file (panel: @selectedPanel)</h4>

    <InputImg Label="Upload" ImageBase64="@fileTemp" OnSelectedImage="OnFileSelected" />

</div>

<div class="@((selectedPanel == 5) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<div class="@((selectedPanel == 6) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<div class="@((selectedPanel == 7) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<div class="@((selectedPanel == 8) ? "" : "d-none")">

    <div class="mt-4"></div>

    <h4 class="mt-2"> ... panel x (panel: @selectedPanel)</h4>

    Data for panel @selectedPanel

</div>

<hr />

<KntFolderSelector @ref="kntFolderSelector" OnCancel="onCancel" OnConfirm="onConfirm"></KntFolderSelector>

@code {
    [CascadingParameter] protected AppState appState { get; set; }
    [CascadingParameter] private Task<AuthenticationState> athenticationState { get; set; }

    private int selectedPanel = 1;

    private int currentCount = 0;
    private KntFolderSelector kntFolderSelector;

    private FolderInfoDto folderSelected;

    private string fileTemp;
    private ResourceDto resource = new ResourceDto();

    private async Task IncrementCount()
    {
        var authState = await athenticationState;

        var user = authState.User;

        if (user.Identity.IsAuthenticated)
            currentCount++;
        else
            currentCount--;
    }

    private void OnFolderSelectorTest()
    {
        kntFolderSelector.Show();
    }

    #region  AppState changed subscription

    protected override void OnInitialized()
    {
        appState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        appState.OnChange -= StateHasChanged;
    }

    private void onConfirm(FolderInfoDto f)
    {
        folderSelected = f;
        kntFolderSelector.Hide();
    }

    private void onCancel()
    {
        kntFolderSelector.Hide();
    }

    #endregion

    private void ShowPanel(int panel)
    {
        selectedPanel = panel;
    }

    private async Task OnFileSelected(string fileBase64)
    {
        resource.ContentBase64 = fileBase64;
        resource.Path = "KNote";
        resource.Path = "Description resource";

        var httpResponse = await dataService.Post("api/notes/savefile", resource);
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            Console.WriteLine("File upload created !!");
            await showMessages.ShowOkMessage("File upload!");
        }
        fileTemp = "";
    }

}
