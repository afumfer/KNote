@page "/users"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

<h3>Users Index</h3>

<div class="form-group">
    <a class="btn btn-info" href="users/new">New user</a>
</div>

<EntityList List="users">
    <ItemsFull>
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th width="140px" >User Name</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Roles</th>
                    <th width="100px" class="text-center">(Actions)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in users)
                {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.FullName</td>
                    <td>@item.EMail</td>
                    <td>@item.RoleDefinition</td>
                    <td>
                        <span class="float-right">
                            <a href="users/edit/@item.UserId" class="btn btn-sm btn-warning mx-1"
                               data-toggle="tooltip" title="Edit user">
                                <i class="fa fa-pencil"></i>
                            </a>
                            <button class="btn btn-sm btn-danger mx-1"
                                    @onclick="@(() => Delete(item))"
                                    data-toggle="tooltip" title="Delete user">
                                <i class="fa fa-minus"></i>
                            </button>
                        </span>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </ItemsFull>
</EntityList>

<ModalDialog @ref="modalDialog" Title="Delete user" onConfirm="OnConfirmDelete" onCancel="OnCancelDelete">
    <div><p>Are you sure you want to delete user "@itemDelete.UserName (@itemDelete.FullName)" ?</p></div>
</ModalDialog>

@code {

    private List<UserInfoDto> users { get; set; }
    private ModalDialog modalDialog;
    private UserInfoDto itemDelete;

    protected async override Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        var res = await dataService.Get<Result<List<UserInfoDto>>>("api/users");
        users = res.Response.Entity;
    }
    
    private void Delete(UserInfoDto item)
    {
        modalDialog.Show();
        itemDelete = item;
    }

    private async Task OnConfirmDelete()
    {
        modalDialog.Hide();

        var httpResponse = await dataService.Delete($"api/users/{itemDelete.UserId}");
        if (httpResponse.Error)
        {                        
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            users = null;
            await Load();
        }

        itemDelete = null;
    }

    private void OnCancelDelete()
    {
        modalDialog.Hide();
        itemDelete = null;        
    }

}
