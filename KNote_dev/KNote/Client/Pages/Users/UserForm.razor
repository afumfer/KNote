<EditForm Model="User" OnValidSubmit="OnValidSubmit">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label>User name:</label>
        <InputText class="form-control" @bind-Value="@User.UserName" />
        <ValidationMessage For="@(() => User.UserName)" />
    </div>

    <div class="form-group">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="@User.EMail" />
        <ValidationMessage For="@(() => User.EMail)" />
    </div>

    <div class="form-group">
        <label>Full name:</label>
        <InputText class="form-control" @bind-Value="@User.FullName" />
        <ValidationMessage For="@(() => User.FullName)" />
    </div>

    <div class="form-group">
        <label>Roles:</label>
        <InputText class="form-control" @bind-Value="@User.RoleDefinition" />
        <ValidationMessage For="@(() => User.RoleDefinition)" />
    </div>

    <!-- TODO: ... -->
    @*<div class="form-group">
            <label>Disabled:</label>
            <InputCheckbox class="form-control" @bind-value="User.Disabled" />
            <ValidationMessage For="@(() => User.Disabled)" />
        </div>*@

    <!-- Footer -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-6">
                &nbsp;
            </div>
            <div class="col-6 float-right">
                <button class="btn btn-success float-right" type="submit">Save changes</button>
            </div>
        </div>
    </div>
    <hr class="mt-1" />

</EditForm>

@code {
    [Parameter] public UserDto User { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}
