@page "/fetchdata"
@using KNote.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null || folders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <hr />

    <table class="table">
        <thead>
            <tr>
                <th>Number</th>
                <th>Name</th>
                <th>Creation</th>
                <th>Modification</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in folders)
            {
                <tr>
                    <td>@f.FolderNumber</td>
                    <td>@f.Name</td>
                    <td>@f.CreationDateTime</td>
                    <td>@f.ModificationDateTime</td>
                </tr>
            }
        </tbody>
    </table>


}

@code {
    private WeatherForecast[] forecasts;
    private List<FolderInfoDto> folders;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("WeatherForecast");

        folders = await Http.GetJsonAsync<List<FolderInfoDto>>("WeatherForecast/GetFolders");

    }

}
