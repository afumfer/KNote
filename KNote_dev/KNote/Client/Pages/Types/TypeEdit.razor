@page "/types/edit/{TypeId}"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Admin")]

<h3>Type Edit</h3>

@if (noteType != null)
{
    <TypeForm OnValidSubmit="Edit" NoteType="noteType" />
}
else
{
    <text>Loading ... </text>
}


@code {
    [Parameter] public string TypeId { get; set; }

    private NoteTypeDto noteType;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await dataService.Get<Result<NoteTypeDto>>($"api/notetypes/{TypeId}");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
            navigationManger.NavigateTo("/");
        }
        else
        {
            noteType = httpResponse.Response.Entity;

            Console.WriteLine($"NoteType loaded!! {noteType.NoteTypeId}");
        }

        base.OnInitialized();
    }

    private async Task Edit()
    {
        Console.WriteLine("Edit user");

        var httpResponse = await dataService.Put("api/NoteTypes", noteType);
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            //Console.WriteLine("Type created !!");
            //await showMessages.ShowOkMessage("Types saved!");
            navigationManger.NavigateTo("types");
        }
    }

}
