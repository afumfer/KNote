@page "/folders"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

<h3>Folders Index</h3>

<div class="form-group">
    <a class="btn btn-info" href="folders/new">New folder</a>
</div>

<hr />

@*@if (folder == null)
{
    <h5>( ... no folder selected ...)</h5>
}
else
{
    <h5><span class="oi oi-folder pr-3"></span>@folder.Name</h5>    
}*@

@if (foldersTree == null)
{
    <p><em>Loading tree folders ...</em></p>
}
else
{
    <KntFoldersTreeView FoldersInfo="foldersTree" FolderSelected="OnFolderSelected" />
}

@code {
    List<FolderInfoDto> foldersTree;
    FolderInfoDto folder;

    protected override async Task OnInitializedAsync()
    {
        //var responseHttp = await repositorio.Get<Result<IEnumerable<FolderInfoDto>>>("http://localhost:7010/api/folders/gettree");
        //kresApi = responseHttp.Response;

        //myFoldersInfo = kresApi.Entity.ToList();


        var res = await dataService.Get<Result<List<FolderInfoDto>>>("api/folders/gettree");
        foldersTree = res.Response.Entity;


        if (foldersTree?.Count > 0)
        {
            var f = foldersTree.Select(x => x).FirstOrDefault();
            f.Selected = true;
            //await OnFolderSelected(f);
            OnFolderSelected(f);
        }
    }

    private void OnFolderSelected(FolderInfoDto f)
    {
        folder = f;
    }

    //private async Task OnFolderSelected(FolderInfoDto f)
    //{
    //    folder = f;

    //    urlGetNotes = @"http://localhost:7010/api/notes/GetByFolder/" + folder.FolderId.ToString();

    //    var responseHttp = await repositorio.Get<Result<IEnumerable<NoteInfoDto>>>(urlGetNotes);
    //    kresApiNotes = responseHttp.Response;

    //    myNotesInfo = kresApiNotes.Entity.ToList();
    //}

}
