@inject IShowMessages showMessages
@inject IKntClientDataService  dataService
@inject NavigationManager navigationManager

<!-- -->

<EditForm Model="Note" Context="formContext">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <!-- Title -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-6">
                <h3>@Title</h3>
            </div>
            <div class="col-6 float-right">
                <button class="btn btn-success float-right" @onclick="(() => Save(formContext))">Save changes</button>
            </div>
        </div>
    </div>
    <hr class="mt-1" />

    <!-- Tab -->
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link @((selectedPanel == 1) ? "active" : "")" @onclick="@(() => ShowPanel(1))">
                <span class="oi oi-document mr-2"></span>Overview
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @((selectedPanel == 2) ? "active" : "")" @onclick="@(() => ShowPanel(2))">
                <span class="oi oi-bookmark mr-2"></span>Attributes
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @((selectedPanel == 3) ? "active" : "")" @onclick="@(() => ShowPanel(3))">
                <span class="oi oi-cloud-upload mr-2"></span>Resources
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @((selectedPanel == 4) ? "active" : "")" @onclick="@(() => ShowPanel(4))">
                <span class="oi oi-task mr-2"></span>Task
            </a>
        </li>
        @*<li class="nav-item">
                <a class="nav-link @((selectedPanel == 5) ? "active" : "")" @onclick="@(() => ShowPanel(5))">
                    <span class="oi oi-envelope-open mr-2"></span>Messages
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @((selectedPanel == 6) ? "active" : "")" @onclick="@(() => ShowPanel(6))">
                    <span class="oi oi-external-link mr-2"></span>TraceNotes
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @((selectedPanel == 7) ? "active" : "")" @onclick="@(() => ShowPanel(7))">
                    <span class="oi oi-flag mr-2"></span>KEvents
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @((selectedPanel == 8) ? "active" : "")" @onclick="@(() => ShowPanel(8))">
                    <span class="oi oi-terminal mr-2" aria-hidden="true"></span>Script
                </a>
            </li>*@

        @*<li class="nav-item">
                    <a class="nav-link disabled" href="#">Script</a>
            </li>*@
    </ul>

    <!-- Panels -->
    <div class="@((selectedPanel == 1) ? "" : "d-none")">

        <div class="mt-4"></div>

        <div class="form-group row">
            <label for="atrTopic" class="col-sm-1 col-form-label">Topic:</label>
            <div class="input-group col-sm-11" id="atrTopic">
                <InputText class="form-control" @bind-Value="@Note.Topic" />
                <div class="input-group-append">
                    <label class="btn btn-outline-secondary" data-toggle="tooltip" title="Note number (automatically assigned)">
                        #@Note.NoteNumber
                    </label>
                </div>
            </div>
            <ValidationMessage For="@(() => Note.Topic)" />
        </div>

        <div class="form-group row">
            <label for="atrFolder" class="col-sm-1 col-form-label">Folder:</label>
            <div class="input-group col-sm-11" id="atrFolder">
                <input type="text" disabled class="form-control" @bind="@Note.FolderDto.Name" />
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" @onclick="@OnFolderSelector"
                            data-toggle="tooltip" title="Select folder">
                        ...&nbsp;<i class="fa fa-folder" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
            <ValidationMessage For="@(() => Note.FolderId)" />
        </div>

        <div class="form-group row">
            <label for="atrTags" class="col-sm-1 col-form-label">Tags:</label>
            <div class="input-group col-sm-11" id="atrTags">
                <InputText class="form-control" @bind-Value="@Note.Tags" />
            </div>
            <ValidationMessage For="@(() => Note.Tags)" />
        </div>

        <div class="form-group row">
            <label for="atrPriority" class="col-sm-1 col-form-label">Priority:</label>
            <div class="input-group col-sm-5" id="atrPriority">
                <InputNumber class="form-control col-sm-11" @bind-Value="@Note.Priority" />
                <ValidationMessage For="@(() => Note.Priority)" />
            </div>

            <label for="atrNoteType" class="col-sm-1 col-form-label">Type:</label>
            <div class="input-group col-sm-5" id="atrNoteType">
                <select class="form-control col-sm-11" @bind="@Note.NoteTypeId">
                    @foreach (var ntype in NoteTypes)
                    {
                        <option value=@ntype.NoteTypeId>@ntype.Name</option>
                    }
                </select>
                <ValidationMessage For="@(() => Note.NoteTypeId)" />
            </div>
        </div>

        <div class="form-group form-markdown">
            <InputMarkdown @bind-Value="@Note.Description"
                           For="@(() => Note.Description)" Label="Description:"></InputMarkdown>

        </div>

    </div>

    <div class="@((selectedPanel == 2) ? "" : "d-none")">
        <div class="mt-4"></div>
        <NoteKAttributes Attributes="Note.KAttributesDto"></NoteKAttributes>
    </div>

    <div class="@((selectedPanel == 3) ? "" : "d-none")">
        <div class="mt-2"></div>
        @if (resources == null)
        {
            <p>Loading resources ...</p>
        }
        else
        {
            <NoteKResources Resources="resources"
                            OnDelete="DeleteResource"
                            OnInsertInDesription="InsertInDescription"
                            OnNewResource="OnResourceSelector">

            </NoteKResources>
        }
    </div>

    <div class="@((selectedPanel == 4) ? "" : "d-none")">

        <div class="mt-4"></div>

        <h4 class="mt-2"> Tasks (panel: @selectedPanel)</h4>

        Data for panel @selectedPanel

    </div>

    <div class="@((selectedPanel == 5) ? "" : "d-none")">

        <div class="mt-4"></div>

        <h4 class="mt-2"> Messages (panel: @selectedPanel)</h4>

        Data for panel @selectedPanel

    </div>

    <div class="@((selectedPanel == 6) ? "" : "d-none")">

        <div class="mt-4"></div>

        <h4 class="mt-2"> Trace notes (panel: @selectedPanel)</h4>

        Data for panel @selectedPanel

    </div>

    <div class="@((selectedPanel == 7) ? "" : "d-none")">

        <div class="mt-4"></div>

        <h4 class="mt-2"> KEvents (panel: @selectedPanel)</h4>

        Data for panel @selectedPanel

    </div>

    <div class="@((selectedPanel == 8) ? "" : "d-none")">

        <div class="mt-4"></div>

        <h4 class="mt-2"> Script (panel: @selectedPanel)</h4>

        Data for panel @selectedPanel

    </div>

    <!-- Footer -->
    @*<div class="container-fluid">
            <div class="row">
                <div class="col-6">
                    &nbsp;
                </div>
                <div class="col-6 float-right">
                    <button class="btn btn-success float-right" @onclick="(() => Save(formContext))">Save changes</button>
                </div>
            </div>
        </div>
        <hr class="mt-1" />*@

    <KntFolderSelector @ref="kntFolderSelector" OnCancel="onCancelFolderSelector" OnConfirm="onConfirmFolderSelector"></KntFolderSelector>

    <KntResourceSelector @ref="kntResourceSelector" OnCancel="onCancelResourceSelector" OnConfirm="onConfirmResourceSelector"></KntResourceSelector>

</EditForm>

@code {
    [Parameter] public string Title { get; set; } = "---";
    [Parameter] public NoteDto Note { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<NoteTypeInfoDto> NoteTypes { get; set; } = new List<NoteTypeInfoDto>();

    private List<ResourceDto> resources { get; set; }

    private KntFolderSelector kntFolderSelector;
    private KntResourceSelector kntResourceSelector;

    private int selectedPanel = 1;

    protected async Task Save(EditContext formContext)
    {
        bool formIsValid = formContext.Validate();
        if (formIsValid == false)
        {
            await showMessages.ShowErrorMessage("Incorrect data, check the required attributes.");
            return;
        }

        await OnValidSubmit.InvokeAsync(formContext);
    }

    private async Task ShowPanel(int panel)
    {
        selectedPanel = panel;

        if (panel == 3 && resources == null)
        {
            var httpResponse = await dataService.Get<Result<List<ResourceDto>>>($"api/notes/getnoteresources/{Note.NoteId}");
            if (httpResponse.Error)
            {
                await showMessages.ShowErrorMessage(await httpResponse.GetBody());                
            }
            else
            {
                resources = httpResponse.Response.Entity;
            }
        }

    }

    #region Managment FolderSelector

    private void OnFolderSelector()
    {
        kntFolderSelector.Show();
    }

    private void onConfirmFolderSelector(FolderInfoDto f)
    {
        Note.FolderDto = f.GetSimpleDto<FolderDto>();
        Note.FolderId = f.FolderId;
        kntFolderSelector.Hide();
    }

    private void onCancelFolderSelector()
    {
        kntFolderSelector.Hide();
    }

    #endregion

    #region Managment ResourceSelector

    private void OnResourceSelector()
    {
        kntResourceSelector.Show();
    }

    private async Task onConfirmResourceSelector(ResourceDto resource)
    {
        resource.NoteId = Note.NoteId;
        resource.Name = Note.NoteId.ToString() + "_" + resource.Name;
        resource.ResourceId = Guid.NewGuid();

        var httpResponse = await dataService.Post<ResourceDto, Result<ResourceDto>>($"api/notes/saveresource", resource);
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {            
            resources.Add(httpResponse.Response.Entity);
        }

        kntResourceSelector.Hide();
    }

    private void onCancelResourceSelector()
    {
        kntResourceSelector.Hide();
    }

    private async Task DeleteResource(ResourceDto resource)
    {

        var httpResponse = await dataService.Delete($"api/notes/deleteresource/{resource.ResourceId}");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            // Note.ResourcesDto.Remove(resource);
            resources.Remove(resource);
        }
    }

    private void InsertInDescription(ResourceDto resource)
    {
        //[I'm an inline-style link](https://www.google.com)
        if (resource.FileType == "image/jpeg")
            Note.Description += "\n\n![alt text](" + resource?.RelativeUrl + " '" + resource?.Description + "' )";
        else
            //[I'm an inline-style link](https://www.google.com)  .... or 
            Note.Description += "\n\n<a href=" + resource?.RelativeUrl + " target='_blank'>" + resource?.Description + "</a>";
        selectedPanel = 1;
    }

    #endregion

}
