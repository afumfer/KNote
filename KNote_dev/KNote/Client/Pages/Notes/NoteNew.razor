@page "/notes/new"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManger
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Staff, ProjecManager, Admin")]

@if (showForm)
{
    <NoteForm Title=@title Note="note" OnValidSubmit="OnNew" OnExit="OnExit" NoteTypes="noteTypes"></NoteForm>    
}
else
{
    <text>Loading ... </text>
}

@code {

    private NoteDto note; // !!! = new NoteDto();
    private bool showForm = false;
    private List<NoteTypeInfoDto> noteTypes = new List<NoteTypeInfoDto>();

    private string title = "Note new";

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await dataService.Get<Result<List<NoteTypeInfoDto>>>("api/notetypes");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            noteTypes = httpResponse.Response.Entity;

            var httpResponseNote = await dataService.Get<Result<NoteDto>>("api/notes/new");
            if (httpResponseNote.Error)
            {
                await showMessages.ShowErrorMessage(await httpResponseNote.GetBody());
            }
            else
            {
                note = httpResponseNote.Response.Entity;
                showForm = true;
            }
        }

        await base.OnInitializedAsync();
    }

    private async Task OnNew()
    {
        if (note.IsNew)
        {
            var httpResponse = await dataService.Post<NoteDto, Result<NoteDto>>("api/notes", note);

            if (httpResponse.Error)
            {
                await showMessages.ShowErrorMessage(await httpResponse.GetBody());
            }
            else
            {
                var xx = httpResponse.Response.Entity;

                // TODO: !!! hack ... repensar lo siguiente.
                //       Se refrescan valores asignados automáticamente 
                //       en la capa de negocio.
                foreach(var x in xx.KAttributesDto)
                {
                    foreach(var n in note.KAttributesDto)
                    {
                        if (n.KAttributeId == x.KAttributeId)
                        {
                            n.NoteKAttributeId = x.NoteKAttributeId;
                            //break;
                        }
                    }
                }
                note.NoteNumber = xx.NoteNumber;
                note.IsNew = false;

                await showMessages.ShowOkMessage("Note successfully updated.");
                title = "Note edit";
            }
        }
        else
        {
            var httpResponse = await dataService.Put<NoteDto>("api/notes", note);

            if (httpResponse.Error)
            {
                await showMessages.ShowErrorMessage(await httpResponse.GetBody());
            }
            else
            {
                await showMessages.ShowOkMessage("Note successfully updated.");
            }
        }

    }

    private void OnExit()
    {
        navigationManger.NavigateTo("notes/tree");
    }

}
