@page "/notes/edit/{NoteId}/{PageReturn}"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

<h3>Note edit</h3>

@if (showForm)
{
    <NoteForm Note="note" OnValidSubmit="Edit" NoteTypes="noteTypes"></NoteForm>
}
else
{
    <text>Loading ... </text>
}

@code {
    [Parameter] public string NoteId { get; set; }
    [Parameter] public string PageReturn { get; set; }


    private NoteDto note;
    private bool showForm = false;
    private List<NoteTypeInfoDto> noteTypes = new List<NoteTypeInfoDto>();

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await dataService.Get<Result<NoteDto>>($"api/notes/{NoteId}");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
            navigationManager.NavigateTo("/");
        }
        else
        {
            note = httpResponse.Response.Entity;
        }

        var httpResponse2 = await dataService.Get<Result<List<NoteTypeInfoDto>>>("api/notetypes");
        if (httpResponse2.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse2.GetBody());
            navigationManager.NavigateTo("/");
        }
        else
        {
            noteTypes = httpResponse2.Response.Entity;
            showForm = true;
        }

        if (PageReturn == null)
            PageReturn = "index";
        else if (PageReturn == "tree")
            PageReturn = "notes/tree";

        Console.WriteLine($"User loaded!! {note.NoteId}");

        base.OnInitialized();
    }

    private async Task Edit()
    {
        Console.WriteLine("Edit note");

        var httpResponse = await dataService.Put("api/notes", note);
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            //Console.WriteLine("User created !!");
            //await showMessages.ShowOkMessage("User saved!");            
            navigationManager.NavigateTo(PageReturn);
        }
    }

}
