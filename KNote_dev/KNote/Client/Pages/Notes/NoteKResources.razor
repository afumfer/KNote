<EntityList List="Resources">
    <ItemsFull>
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Order</th>
                    <th width="100px" class="text-center">(Actions)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Resources)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Description</td>
                        <td>@item.Order</td>                        
                        <td>
                            <span class="float-right">
                                <button class="btn btn-sm btn-info mx-1"
                                        @onclick="@(() => onInsertInDesription(item))"
                                        data-toggle="tooltip" title="Insert in description">
                                    <i class="fa fa-clipboard"></i>
                                </button>
                                <button class="btn btn-sm btn-danger mx-1"
                                        @onclick="@(() => onDelete(item))"
                                        data-toggle="tooltip" title="Delete resource">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </ItemsFull>
</EntityList>

@code {
    [Parameter] public List<ResourceDto> Resources { get; set; }
    [Parameter] public EventCallback<ResourceDto> OnDelete { get; set; }
    [Parameter] public EventCallback<ResourceDto> OnInsertInDesription { get; set; }

    private async Task onInsertInDesription(ResourceDto resource)
    {
        await OnInsertInDesription.InvokeAsync(resource);
    }

    private async Task onDelete(ResourceDto resource)
    {
        await OnDelete.InvokeAsync(resource);
    }

}