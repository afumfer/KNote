@page "/notes/tree"
@page "/tree"

@inject IKntClientDataService  dataService
@inject NavigationManager navigationManager
@inject IShowMessages showMessages

@attribute [Authorize(Roles = "Public, Staff, ProjecManager, Admin")]

@*<div class="kpage-header mb-0">
    <div class="col-3">
        <h3>Notes tree</h3>
    </div>
    <div class="col-9 float-right">
        <i class="oi oi-grid-three-up"></i>
        <button class="btn btn-sm btn-warning mx-1"
                @onclick="GoNewNote"
                data-toggle="tooltip" title="New note">
            <i class="oi oi-document"></i> New note
        </button>
    </div>
</div>
<hr class="mt-0" />*@

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <h3>Notes tree</h3>
        </div>
        <div class="col-6 float-right">
            <button class="btn btn-sm btn-warning mx-1 float-right"
                    @onclick="GoNewNote"
                    data-toggle="tooltip" title="New note">
                <i class="oi oi-bookmark"></i> New note
            </button>
        </div>
    </div>
</div>
<hr class="mt-0" />

<div class="row">

    <div class="col-lg-12 pt-2 bg-light border">
        @if (folder == null)
        {
            <h5>( ... no folder selected ...)</h5>
        }
        else
        {
            <h5><span class="oi oi-folder pr-3"></span>@folder.Name</h5>
        }
    </div>
    <div class="col-lg-3 pt-2 pb-2 bg-light border">
        @if (foldersTree == null)
        {
            <p><em>Loading tree folders ...</em></p>
        }
        else
        {
            <KntFoldersTreeView FoldersInfo="foldersTree" FolderSelected="OnFolderSelected" />
        }
    </div>

    <div class="col-lg-9 pt-2 pb-2 bg-light border">
        @if (notes == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @*<h5>Notes</h5>
                <hr />
                <p></p>*@
            <table class="table table-sm table-bordered table-striped">
                <!--   <table class="table pt-4">  -->
                <thead>
                    <tr>
                        <th width="80px" class="text-right">#</th>
                        <th>Topic</th>
                        <th width="60px" class="text-right">Priority</th>
                        <th width="80px" class="text-right">Date</th>
                        <th width="100px" class="text-center">(Actions)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var note in notes)
                    {
                        <tr>
                            <td class="text-right">@note.NoteNumber</td>
                            <td>@note.Topic</td>
                            <td class="text-right">@note.Priority</td>
                            <td class="text-right">  @note.CreationDateTime.ToShortDateString()</td>
                            <td>
                                <AuthorizeView Roles="Admin, ProjecManager, Staff">
                                    <Authorized>
                                        <span class="float-right">
                                            <a href="notes/edit/@note.NoteId/tree" class="btn btn-sm btn-warning mx-1"
                                               data-toggle="tooltip" title="Edit user">
                                                <i class="fa fa-pencil"></i>
                                            </a>
                                            <button class="btn btn-sm btn-danger mx-1"
                                                    @onclick="@(() => Delete(note))"
                                                    data-toggle="tooltip" title="Delete user">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </span>
                                    </Authorized>
                                    <NotAuthorized>
                                        <a href="notes/@note.NoteId">
                                            <span class="badge badge-pill badge-primary float-right ml-1">
                                                ...
                                            </span>
                                        </a>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    </div>
</div>

<ModalDialog @ref="modalDialog" Title="Delete note" onConfirm="OnConfirmDelete" onCancel="OnCancelDelete">
    <div><p>Are you sure you want to delete user "@itemDelete.Topic (@itemDelete.NoteNumber)" ?</p></div>
</ModalDialog>

@code {
    private List<FolderInfoDto> foldersTree;
    private FolderInfoDto folder;
    private ModalDialog modalDialog;
    private NoteInfoDto itemDelete;

    List<NoteInfoDto> notes;

    protected override async Task OnInitializedAsync()
    {
        var res = await dataService.Get<Result<List<FolderInfoDto>>>("api/folders/gettree");
        foldersTree = res.Response.Entity;

        if (foldersTree?.Count > 0)
        {
            var f = foldersTree.Select(x => x).FirstOrDefault();
            f.Selected = true;
            await OnFolderSelected(f);
        }
    }

    private async Task OnFolderSelected(FolderInfoDto f)
    {
        folder = f;
        await LoadNotes();
    }

    private async Task LoadNotes()
    {
        notes = null;
        var httpResponse = await dataService.Get<Result<List<NoteInfoDto>>>("api/notes/GetByFolder/" + folder.FolderId.ToString());
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            notes = httpResponse.Response.Entity;
        }
    }

    private void Delete(NoteInfoDto item)
    {
        modalDialog.Show();
        itemDelete = item;
    }

    private async Task OnConfirmDelete()
    {
        modalDialog.Hide();

        var httpResponse = await dataService.Delete($"api/notes/{itemDelete.NoteId}");
        if (httpResponse.Error)
        {
            await showMessages.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            await LoadNotes();
        }

        itemDelete = null;
    }

    private void OnCancelDelete()
    {
        modalDialog.Hide();
        itemDelete = null;
    }

    void GoNewNote()
    {
        navigationManager.NavigateTo($"notes/new");
    }

}
